BASE_TASK_CONFIG_PATH: "configs/tasks/multinav_cyl.yaml"
CMD_TRAILING_OPTS: ["TASK_CONFIG.ENVIRONMENT.ITERATOR_OPTIONS.MAX_SCENE_REPEAT_STEPS", "50000"]
ENV_NAME: "NavRLEnv"
TRAINER_NAME: "ddppo"
SIMULATOR_GPU_ID: 0
TORCH_GPU_ID: 1
VIDEO_OPTION: []
TENSORBOARD_DIR: "tb/baseline_gru/cyl/train"
TENSORBOARD_DIR_EVAL: "tb/baseline_gru/cyl/eval"
VIDEO_DIR: "video_dir"
TEST_EPISODE_COUNT: -1
EVAL_CKPT_PATH_DIR: "model_checkpoints/baseline_gru/cyl"
NUM_PROCESSES: 16
CHECKPOINT_FOLDER: "checkpoints/baseline_gru/cyl"
SENSORS: ["DEPTH_SENSOR", "RGB_SENSOR"]
NUM_UPDATES: 270000
LOG_INTERVAL: 10
NUM_CHECKPOINTS: 100
CHECKPOINT_INTERVAL: -1
# Force PyTorch to be single threaded as
# this improves performance considerably
FORCE_TORCH_SINGLE_THREADED: True

EVAL:
  SPLIT: "val"

RL:
  SLACK_REWARD: -1e-3
  SUCCESS_REWARD: 3.0
  SUBSUCCESS_REWARD: 3.0
  FALSE_FOUND_PENALTY: False
  FALSE_FOUND_PENALTY_VALUE: 2.5

  POLICY:
    name: "PointNavResNetPolicy"

  PPO:
    # ppo params
    clip_param: 0.2
    ppo_epoch: 4
    num_mini_batch: 2
    value_loss_coef: 0.5
    entropy_coef: 0.01
    lr: 2.5e-4
    eps: 1e-5
    max_grad_norm: 0.2
    num_steps: 64
    use_gae: True
    gamma: 0.99
    tau: 0.95
    use_linear_clip_decay: False
    use_linear_lr_decay: False
    reward_window_size: 50

    use_normalized_advantage: False

    hidden_size: 512

  DDPPO:
    sync_frac: 0.6
    # The PyTorch distributed backend to use
    distrib_backend: NCCL
    # Visual encoder backbone
    pretrained_weights: data/mp3d-depth-best.pth
    # Initialize with pretrained weights
    pretrained: False
    # Initialize just the visual encoder backbone with pretrained weights
    pretrained_encoder: False
    # Whether or not the visual encoder backbone will be trained.
    train_encoder: True
    # Whether or not to reset the critic linear layer
    reset_critic: True

    # Model parameters
    backbone: resnet50
    rnn_type: LSTM
    num_recurrent_layers: 2